%start FSM::q0
%class Fsm

%map FSM
%%
// State        Transition      End State       Action(s)
q0
{
                natural_create(c: string)
                    q1              {createNumber();}
                err               error           {}
}
q1
{
                digit_create(c: string)
                      q1              {createNumber();}
                separator         q2              {}
                err               error           {}

}
q2
{
                alpha             q3              {increase();}
                err               error           {}

}
q3
{
                alpha_with_check()
                    [ctxt.isValid()]
                        q3
                        {
                            increase();
                        }
                alpha_with_check()
                    [not ctxt.isValid()]
                        error
                        {
                            resetCounter();
                        }
                digit_with_check()
                    [ctxt.isValid()]
                        q3
                        {
                            increase();
                        }
                digit_with_check()
                    [not ctxt.isValid()]
                        error
                        {
                            resetCounter();
                        }
                separator         q4              {}
                equal             q5              {}
                err               error           {}
}
q4
{
                separator         q4              {}
                equal             q5              {}
                err               error           {}
}
q5
{
                separator         q6              {}
                minus_check()
                       [ctxt.IsMinus()]
                       q7
                       {}
                minus_check()
                       [not ctxt.IsMinus()]
                       error
                       {}
                alpha             q8              {increase();}
                natural           q9              {}
                err               error           {}
}
q6
{
               separator          q6              {}
               minus_check()
                       [ctxt.IsMinus()]
                       q7
                       {}
               minus_check()
                       [not ctxt.IsMinus()]
                       error
                       {}
               alpha              q8              {increase();}
               natural            q9              {}
               err               error            {}
}
q7
{
               natural            q9              {}
               err               error            {}
}
q8
{
               alpha_with_check()
                    [ctxt.isValid()]
                        q8
                        {
                            increase();
                        }
                alpha_with_check()
                    [not ctxt.isValid()]
                        error
                        {
                            resetCounter();
                        }
                digit_with_check()
                    [ctxt.isValid()]
                        q8
                        {
                            increase();
                        }
                digit_with_check()
                    [not ctxt.isValid()]
                        error
                        {
                            resetCounter();
                        }
               operations         q5              {}
               separator          q10             {}
               EOS                OK              {}
               err               error            {}
}
q9
{
               operations         q5              {}
               digit              q9              {}
               EOS                OK              {}
               separator          q10             {}
               err               error            {}
}
q10
{
               separator          q10             {}
               EOS                OK              {}
               operations         q5              {}
               err               error            {}
}
OK
{
}
error
{
}
%%